document.addEventListener('DOMContentLoaded', function() {

  const imageId = 6 //Enter your assigned imageId here

  const imageURL = `https://randopic.herokuapp.com/images/${imageId}`

  const likeURL = `https://randopic.herokuapp.com/likes/`

  const commentsURL = `https://randopic.herokuapp.com/comments/`

  // Element IDs
  const image = document.getElementById("image");
  const likes = document.getElementById("likes");
  const name = document.getElementById("name");
  const comments = document.getElementById("comments");
  const submit = document.getElementById("submit");

  // Delete comment
  deleteComment = () => {
    const deleteButtons = document.querySelectorAll('.deleteButton');
    deleteButtons.forEach(button => {
      button.addEventListener('click',event => {
        const commentID = parseInt(event.target.dataset.buttonId);
        fetch(`${commentsURL}/${commentID}`,{method:'DELETE'})
        event.target.parentElement.remove();
      })
    })
  }

  // Fetch image data from the server and populate the page
  render = () => {
    return fetch(imageURL).then(res => res.json()).then(data => {
      likes.innerHTML = data.like_count;
      name.innerHTML = data.name;
      image.src = data.url; // Insert image into 'image' id
      image.dataset.id = data.id;
      data.comments.forEach(comment => {
        comments.innerHTML += `<li data-id="${comment.id}"> ${comment.content} <button class="deleteButton" data-button-id="${comment.id}"> x </button> </li>`
      })
      deleteComment();
    })
  }

  // Post Like to API
  postLike = () => {
    const imgID = parseInt(image.dataset.id);
    postAPIConfig = {
      method: "POST",
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        image_id: imgID
      })
    }
    return fetch(likeURL,postAPIConfig)
  }

  // Like button functionality
  const likesButton = document.getElementById("like_button");
  likesButton.addEventListener('click', event => {
    let likesCount = parseInt(likes.innerHTML);
    likesCount += 1;
    likes.innerHTML = likesCount; 
    postLike();
    // debugger
  })

  // POST Comment to API
  postComment = (comment) => {
    const imgID = parseInt(image.dataset.id);
    postCommentConfig = {
      method: "POST",
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        image_id: imgID,
        content: comment
      })
    }
    return fetch(commentsURL,postCommentConfig).then(refresh => {
      // Refresh the comments once they have been posted to the database.
      // These has to happen after the post has happened to ensure every comment has a unique ID (which is generated by the database)
      comments.innerHTML = "";
      render();
    });
  }

  // Comments feature
  submit.addEventListener('click', event => {
    event.preventDefault();
    const commentInput = document.getElementById("comment_input");
    newComment = document.createElement("LI");
    newComment.innerHTML = commentInput.value;
    comments.appendChild(newComment);
    postComment(commentInput.value);
    commentInput.value = "";
  })

  render();

})

